$date
	Sat Nov 07 20:31:44 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! zero $end
$var wire 4 " salida [3:0] $end
$var wire 1 # carry $end
$var reg 4 $ D [3:0] $end
$var reg 1 % EN_ACU $end
$var reg 1 & EN_BUS1 $end
$var reg 1 ' EN_BUS2 $end
$var reg 1 ( clk $end
$var reg 1 ) reset $end
$var reg 3 * selct [2:0] $end
$scope module a2 $end
$var wire 4 + D [3:0] $end
$var wire 1 % EN_ACU $end
$var wire 1 & EN_BUS1 $end
$var wire 1 ' EN_BUS2 $end
$var wire 1 ( clk $end
$var wire 1 ) reset $end
$var wire 3 , selct [2:0] $end
$var wire 1 ! zero $end
$var wire 4 - salida [3:0] $end
$var wire 4 . respuesta_ALU [3:0] $end
$var wire 4 / data_bus [3:0] $end
$var wire 1 # carry $end
$var wire 4 0 accu [3:0] $end
$scope module c1 $end
$var wire 1 & En $end
$var wire 4 1 Entrada [3:0] $end
$var wire 4 2 salida [3:0] $end
$upscope $end
$scope module c2 $end
$var wire 4 3 B [3:0] $end
$var wire 3 4 commando [2:0] $end
$var wire 4 5 A [3:0] $end
$var reg 4 6 Out [3:0] $end
$var reg 1 # carry $end
$var reg 5 7 w [4:0] $end
$var reg 1 ! zero $end
$upscope $end
$scope module c3 $end
$var wire 4 8 D [3:0] $end
$var wire 1 % En $end
$var wire 1 ( clk $end
$var wire 1 ) reset $end
$var reg 4 9 Q [3:0] $end
$upscope $end
$scope module c4 $end
$var wire 1 ' En $end
$var wire 4 : Entrada [3:0] $end
$var wire 4 ; salida [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
x(
x'
x&
x%
bx $
x#
bx "
x!
$end
#1
0#
b0xxxx 7
bz "
bz -
bz ;
bz /
bz 2
bz 3
b0 *
b0 ,
b0 4
b0 $
b0 +
b0 1
0%
0'
0&
0)
0(
#2
b0 .
b0 6
b0 8
b0 :
1!
b0 7
b0 0
b0 5
b0 9
1)
1(
#3
b1000 .
b1000 6
b1000 8
b1000 :
0!
b1000 7
b1000 "
b1000 -
b1000 ;
b1000 /
b1000 2
b1000 3
b1000 $
b1000 +
b1000 1
b10 *
b10 ,
b10 4
1%
1'
1&
0)
0(
#4
b1000 7
b1000 0
b1000 5
b1000 9
1(
#5
0(
#6
b0 "
b0 -
b0 ;
b0 .
b0 6
b0 8
b0 :
1#
b10000 7
b11 *
b11 ,
b11 4
1(
#7
0(
#8
b0 0
b0 5
b0 9
b1 "
b1 -
b1 ;
b1 /
b1 2
b1 3
b1 .
b1 6
b1 8
b1 :
0#
b1 7
b1 $
b1 +
b1 1
b10 *
b10 ,
b10 4
1(
#9
0(
#10
1!
b1 0
b1 5
b1 9
b0 "
b0 -
b0 ;
b0 .
b0 6
b0 8
b0 :
0#
b0 7
b1 *
b1 ,
b1 4
1(
